"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analyze-contract/route";
exports.ids = ["app/api/analyze-contract/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-contract%2Froute&page=%2Fapi%2Fanalyze-contract%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-contract%2Froute.ts&appDir=%2FUsers%2Fmaxhenkes%2FDesktop%2FLexChecker%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmaxhenkes%2FDesktop%2FLexChecker&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-contract%2Froute&page=%2Fapi%2Fanalyze-contract%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-contract%2Froute.ts&appDir=%2FUsers%2Fmaxhenkes%2FDesktop%2FLexChecker%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmaxhenkes%2FDesktop%2FLexChecker&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_maxhenkes_Desktop_LexChecker_src_app_api_analyze_contract_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/analyze-contract/route.ts */ \"(rsc)/./src/app/api/analyze-contract/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analyze-contract/route\",\n        pathname: \"/api/analyze-contract\",\n        filename: \"route\",\n        bundlePath: \"app/api/analyze-contract/route\"\n    },\n    resolvedPagePath: \"/Users/maxhenkes/Desktop/LexChecker/src/app/api/analyze-contract/route.ts\",\n    nextConfigOutput,\n    userland: _Users_maxhenkes_Desktop_LexChecker_src_app_api_analyze_contract_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/analyze-contract/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbmFseXplLWNvbnRyYWN0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZhbmFseXplLWNvbnRyYWN0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYW5hbHl6ZS1jb250cmFjdCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm1heGhlbmtlcyUyRkRlc2t0b3AlMkZMZXhDaGVja2VyJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm1heGhlbmtlcyUyRkRlc2t0b3AlMkZMZXhDaGVja2VyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3lCO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDNko7O0FBRTdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWR2b25pcy8/NTNmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvbWF4aGVua2VzL0Rlc2t0b3AvTGV4Q2hlY2tlci9zcmMvYXBwL2FwaS9hbmFseXplLWNvbnRyYWN0L3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hbmFseXplLWNvbnRyYWN0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYW5hbHl6ZS1jb250cmFjdFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYW5hbHl6ZS1jb250cmFjdC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9tYXhoZW5rZXMvRGVza3RvcC9MZXhDaGVja2VyL3NyYy9hcHAvYXBpL2FuYWx5emUtY29udHJhY3Qvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYW5hbHl6ZS1jb250cmFjdC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-contract%2Froute&page=%2Fapi%2Fanalyze-contract%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-contract%2Froute.ts&appDir=%2FUsers%2Fmaxhenkes%2FDesktop%2FLexChecker%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmaxhenkes%2FDesktop%2FLexChecker&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/analyze-contract/route.ts":
/*!***********************************************!*\
  !*** ./src/app/api/analyze-contract/route.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var groq_sdk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! groq-sdk */ \"(rsc)/./node_modules/groq-sdk/index.mjs\");\n/* harmony import */ var _lib_specialized_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/specialized-prompts */ \"(rsc)/./src/lib/specialized-prompts.ts\");\n\n\n\nconst groq = new groq_sdk__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n    apiKey: process.env.GROQ_API_KEY\n});\n// Use a structured system prompt that enforces consistent JSON output\nconst SYSTEM_PROMPT = `Sie sind ein erfahrener deutscher Rechtsanwalt mit Spezialisierung auf Arbeits- und Vertragsrecht.\n\nAUFGABE: Analysieren Sie deutsche Verträge und identifizieren Sie alle rechtlichen Probleme, Compliance-Verstöße und Verbesserungsmöglichkeiten.\n\nWICHTIG: Antworten Sie AUSSCHLIESSLICH im folgenden JSON-Format:\n\n{\n  \"overallRisk\": \"low|medium|high|critical\",\n  \"summary\": \"Kurze Zusammenfassung der wichtigsten rechtlichen Probleme\",\n  \"annotations\": [\n    {\n      \"id\": \"unique_id\",\n      \"type\": \"legal_risk|compliance_issue|improvement_suggestion|missing_clause|gdpr_concern\",\n      \"severity\": \"critical|high|medium|low|info\",\n      \"sourceType\": \"specific_text|structural_inference|missing_clause\",\n      \"comment\": \"Präzise Beschreibung des Problems (max. 100 Zeichen)\",\n      \"explanation\": \"Detaillierte rechtliche Erklärung mit Begründung (min. 50 Zeichen)\",\n      \"legalReference\": \"Relevante Gesetze/Paragraphen (z.B. § 622 BGB, § 2 NachwG)\",\n      \"text\": \"Relevanter Vertragstext oder Problembereich\",\n      \"textEvidence\": [\"§2 Arbeitszeit\", \"§5 Weisungsbefugnis\"], // Nur bei structural_inference\n      \"recommendedHighlight\": \"Ungefährer Text zum Hervorheben\", // Nur bei structural_inference\n      \"contributingFactors\": [ // Nur bei komplexen structural_inference Problemen\n        {\n          \"clauseReference\": \"§2 Arbeitszeit\",\n          \"factorText\": \"Feste Arbeitszeiten 9-17 Uhr\",\n          \"severity\": \"high\",\n          \"explanation\": \"Deutet auf abhängige Beschäftigung hin\"\n        }\n      ],\n      \"suggestedReplacement\": \"Vorgeschlagene Verbesserung (optional)\",\n      \"pageNumber\": 1,\n      \"confidence\": 0.9\n    }\n  ],\n  \"recommendations\": [\n    {\n      \"title\": \"Empfehlungstitel\",\n      \"description\": \"Detaillierte Handlungsempfehlung\",\n      \"priority\": \"high|medium|low\",\n      \"category\": \"Compliance|BGB|Arbeitsrecht|Datenschutz\",\n      \"actionRequired\": true\n    }\n  ]\n}\n\nANNOTATION SOURCE TYPES:\n- \"specific_text\": Problem liegt in konkretem Vertragstext (z.B. unwirksame AGB-Klausel)\n- \"structural_inference\": Rechtliche Schlussfolgerung aus Gesamtvertrag (z.B. Scheinselbständigkeit)\n- \"missing_clause\": Fehlende erforderliche Bestimmung\n\nFÜR STRUCTURAL_INFERENCE:\n- textEvidence: Liste der beitragenden Vertragsabsätze/Klauseln\n- recommendedHighlight: Konkreter Text der hervorgehoben werden sollte\n- contributingFactors: Bei komplexen Problemen wie Scheinselbständigkeit alle Faktoren auflisten\n\nBEISPIEL für Scheinselbständigkeit:\n{\n  \"sourceType\": \"structural_inference\",\n  \"textEvidence\": [\"§2 Arbeitszeit\", \"§4 Weisungen\", \"§6 Vergütung\"],\n  \"contributingFactors\": [\n    {\"clauseReference\": \"§2\", \"factorText\": \"Arbeitszeit: täglich 8 Stunden\", \"severity\": \"high\"},\n    {\"clauseReference\": \"§4\", \"factorText\": \"Weisungsrecht des Auftraggebers\", \"severity\": \"critical\"}\n  ]\n}\n\nBEISPIELE für mathematische Validierung:\n\nRICHTIG - Mindestlohn COMPLIANCE (KEINE Flaggung):\n- Vertrag: €4.500/Monat bei 168h → €26,79/h > €12,41 → KEIN Verstoß\n- Vertrag: €2.500/Monat bei 160h → €15,63/h > €12,41 → KEIN Verstoß\n\nRICHTIG - Mindestlohn VERSTOS (Flaggung erforderlich):\n- Vertrag: €1.800/Monat bei 168h → €10,71/h < €12,41 → Verstoß flaggen\n\nFALSCH - Diese Flaggung ist VERBOTEN:\n- \"Trotz €26,79/h könnte Mindestlohn-Risiko bestehen\" → NIEMALS so flaggen!\n\nALLGEMEINE VALIDIERUNGSREGEL:\nFür JEDEN Compliance-Check gilt:\n1. MESSEN Sie den tatsächlichen Wert im Vertrag\n2. VERGLEICHEN Sie mit dem gesetzlichen Schwellenwert  \n3. NUR bei tatsächlicher Unterschreitung → Verstoß flaggen\n4. Bei Einhaltung oder Überschreitung → KEINE Flaggung\n5. DOKUMENTIEREN Sie die Berechnung transparent\n\nDiese Regel gilt für: Mindestlohn, Kündigungsfristen, Urlaubstage, Arbeitszeiten, etc.\n\nANALYSESCHWERPUNKTE:\n- BGB-Compliance (§§ 305-310 AGB-Recht, § 307 Unwirksamkeit)\n- Arbeitsrecht (§ 622 BGB Kündigungsfristen, § 2 NachwG Pflichtangaben)\n- Mindestlohn (MiLoG § 1: aktuell 12,41 €/Stunde)\n- Urlaubsrecht (BUrlG § 3: mind. 24 Werktage)\n- DSGVO-Compliance bei Datenverarbeitung\n- Scheinselbständigkeit nach § 611a BGB\n\nKRITISCH - MATHEMATISCHE VALIDIERUNG:\nBei Mindestlohn-Prüfung:\n1. Berechnen Sie den Stundenlohn: (Monatslohn ÷ Arbeitsstunden pro Monat)\n2. Vergleichen Sie mit €12,41\n3. NUR bei Stundenlohn < €12,41 → Verstoß flaggen\n4. Bei Stundenlohn ≥ €12,41 → KEINEN Verstoß flaggen\n5. Dokumentieren Sie die Berechnung in der explanation\n\nBei Urlaubstagen-Prüfung:\n1. Zählen Sie die gewährten Urlaubstage\n2. Vergleichen Sie mit 24 Werktagen (bei 6-Tage-Woche) oder 20 Werktagen (bei 5-Tage-Woche)\n3. NUR bei weniger Tagen → Verstoß flaggen\n\nNIEMALS einen Compliance-Verstoß flaggen, wenn die tatsächlichen Werte die gesetzlichen Mindestanforderungen erfüllen oder überschreiten.\n\nJede Annotation MUSS eine detaillierte \"explanation\" und \"legalReference\" enthalten. Seien Sie spezifisch und actionable.`;\n// Helper function to get specialized system prompt based on contract type\nfunction getSpecializedSystemPrompt(contractType) {\n    const specializedPrompt = _lib_specialized_prompts__WEBPACK_IMPORTED_MODULE_1__.SPECIALIZED_SYSTEM_PROMPTS[contractType];\n    const jsonFormat = `\n\nWICHTIG: Antworten Sie NUR im folgenden JSON-Format:\n{\n  \"overallRisk\": \"low|medium|high|critical\",\n  \"summary\": \"Kurze Zusammenfassung der wichtigsten Erkenntnisse\",\n  \"annotations\": [\n    {\n      \"type\": \"legal_risk|compliance_issue|improvement_suggestion|language_clarity|missing_clause|gdpr_concern\",\n      \"severity\": \"critical|high|medium|low|info\",\n      \"text\": \"Der zu analysierende Textabschnitt\",\n      \"comment\": \"Kurze Erklärung des Problems\",\n      \"explanation\": \"Detaillierte rechtliche Begründung\",\n      \"suggestedReplacement\": \"Vorgeschlagener Ersatztext (optional)\",\n      \"legalReference\": \"Rechtsbezug (z.B. § 307 BGB)\",\n      \"confidence\": 0.95\n    }\n  ],\n  \"recommendations\": [\n    {\n      \"title\": \"Empfehlungstitel\",\n      \"description\": \"Beschreibung der Empfehlung\",\n      \"priority\": \"high|medium|low\",\n      \"category\": \"Kategorie\",\n      \"actionRequired\": true|false\n    }\n  ],\n  \"compliance\": [\n    {\n      \"law\": \"BGB\",\n      \"section\": \"§ 307\",\n      \"status\": \"compliant|non_compliant|unclear\",\n      \"description\": \"Beschreibung der Compliance\",\n      \"recommendation\": \"Empfehlung bei Nicht-Compliance\"\n    }\n  ]\n}`;\n    return specializedPrompt ? specializedPrompt + jsonFormat : SYSTEM_PROMPT;\n}\n// Helper function to find text in content with better matching\nfunction findTextOffset(content, searchText) {\n    if (!searchText || !content) {\n        return {\n            startOffset: 0,\n            endOffset: 0\n        };\n    }\n    // Try exact match first\n    let index = content.indexOf(searchText);\n    if (index >= 0) {\n        return {\n            startOffset: index,\n            endOffset: index + searchText.length\n        };\n    }\n    // Try case-insensitive match\n    const lowerContent = content.toLowerCase();\n    const lowerSearch = searchText.toLowerCase();\n    index = lowerContent.indexOf(lowerSearch);\n    if (index >= 0) {\n        return {\n            startOffset: index,\n            endOffset: index + searchText.length\n        };\n    }\n    // Try partial match (first 20 characters)\n    const partial = searchText.substring(0, Math.min(20, searchText.length));\n    index = lowerContent.indexOf(partial.toLowerCase());\n    if (index >= 0) {\n        return {\n            startOffset: index,\n            endOffset: index + partial.length\n        };\n    }\n    // Try word-based matching (split by spaces and find first word)\n    const words = searchText.split(/\\s+/).filter((w)=>w.length > 3);\n    for (const word of words){\n        index = lowerContent.indexOf(word.toLowerCase());\n        if (index >= 0) {\n            return {\n                startOffset: index,\n                endOffset: index + word.length\n            };\n        }\n    }\n    return {\n        startOffset: 0,\n        endOffset: 0\n    };\n}\n// Post-process annotations to ensure they have valid offsets\nfunction computeAnnotationOffsets(annotations, content) {\n    return annotations.map((annotation)=>{\n        // Skip if already has valid offsets\n        if (annotation.startOffset > 0 && annotation.endOffset > annotation.startOffset) {\n            return annotation;\n        }\n        // Try to find text in different fields\n        const searchTexts = [\n            annotation.text,\n            annotation.recommendedHighlight,\n            annotation.factorText,\n            ...annotation.textEvidence || [],\n            ...annotation.contributingFactors?.map((f)=>f.factorText) || []\n        ].filter(Boolean);\n        for (const searchText of searchTexts){\n            const { startOffset, endOffset } = findTextOffset(content, searchText);\n            if (startOffset > 0 || endOffset > 0) {\n                return {\n                    ...annotation,\n                    startOffset,\n                    endOffset,\n                    text: searchText // Use the text that was actually found\n                };\n            }\n        }\n        // For missing clauses or structural inferences, don't highlight\n        if (annotation.sourceType === \"missing_clause\" || annotation.type === \"missing_clause\") {\n            return {\n                ...annotation,\n                startOffset: 0,\n                endOffset: 0\n            };\n        }\n        return annotation;\n    });\n}\nfunction normalizeAnnotations(analysis, content) {\n    const annotations = [];\n    // If already present, return as is\n    if (Array.isArray(analysis.annotations) && analysis.annotations.length > 0) {\n        return analysis.annotations;\n    }\n    // Map vertragsanalyse.kritische_hinweise (newest structure)\n    if (analysis.vertragsanalyse?.kritische_hinweise && Array.isArray(analysis.vertragsanalyse.kritische_hinweise)) {\n        analysis.vertragsanalyse.kritische_hinweise.forEach((hint, i)=>{\n            const text = hint.substring(0, 30) + \"...\";\n            const { startOffset, endOffset } = findTextOffset(content, text);\n            annotations.push({\n                id: `kritisch_hinweis_${i}`,\n                type: \"legal_risk\",\n                severity: \"high\",\n                comment: \"Kritischer Hinweis\",\n                explanation: hint,\n                text,\n                startOffset,\n                endOffset,\n                pageNumber: 1,\n                confidence: 0.9\n            });\n        });\n    }\n    // Map rechtliche_einordnung issues\n    if (analysis.rechtliche_einordnung?.abgrenzung_arbeitsvertrag) {\n        const ab = analysis.rechtliche_einordnung.abgrenzung_arbeitsvertrag;\n        const abText = \"Freier Werkvertrag\";\n        const { startOffset: abStart, endOffset: abEnd } = findTextOffset(content, abText);\n        annotations.push({\n            id: \"abgrenzung_arbeitsvertrag\",\n            type: \"legal_risk\",\n            severity: \"high\",\n            comment: \"Abgrenzung Arbeitsvertrag\",\n            explanation: `${ab.problem}. ${ab.gefahr}`,\n            legalReference: \"\\xa7 611a BGB, \\xa7\\xa7 631-651 BGB\",\n            text: abText,\n            startOffset: abStart,\n            endOffset: abEnd,\n            pageNumber: 1,\n            confidence: 0.9\n        });\n    }\n    // Map fehlende_mindestangaben\n    if (analysis.fehlende_mindestangaben?.[\"pflichtangaben_nach_\\xa72_nachweisg\"]) {\n        const pflichtangaben = analysis.fehlende_mindestangaben[\"pflichtangaben_nach_\\xa72_nachweisg\"];\n        pflichtangaben.forEach((angabe, i)=>{\n            annotations.push({\n                id: `fehlende_angabe_${i}`,\n                type: \"missing_clause\",\n                severity: \"medium\",\n                comment: `Fehlende Pflichtangabe: ${angabe}`,\n                explanation: `Nach § 2 NachwG erforderlich: ${angabe}. Status: ${analysis.fehlende_mindestangaben.status}`,\n                legalReference: \"\\xa7 2 NachwG\",\n                text: angabe,\n                startOffset: 0,\n                endOffset: 0,\n                pageNumber: 1,\n                confidence: 0.8\n            });\n        });\n    }\n    // Map compliance_verstoesse\n    if (analysis.compliance_verstoesse) {\n        Object.entries(analysis.compliance_verstoesse).forEach(([key, value], i)=>{\n            if (value && typeof value === \"object\") {\n                const keyIdx = content.indexOf(key);\n                annotations.push({\n                    id: `compliance_${key}_${i}`,\n                    type: \"compliance_issue\",\n                    severity: value.status?.includes(\"Nicht\") ? \"medium\" : \"low\",\n                    comment: `Compliance-Verstoß: ${key}`,\n                    explanation: `${value.status || \"\"}. ${value.problem || value.hinweis || \"\"}`,\n                    text: key,\n                    startOffset: keyIdx >= 0 ? keyIdx : 0,\n                    endOffset: keyIdx >= 0 ? keyIdx + key.length : 0,\n                    pageNumber: 1,\n                    confidence: 0.7\n                });\n            }\n        });\n    }\n    // Map rechtliche_mängel (previous structure)\n    if (analysis.rechtliche_mängel && Array.isArray(analysis.rechtliche_mängel)) {\n        analysis.rechtliche_mängel.forEach((rm, i)=>{\n            const rmText = rm.kategorie || rm.titel || \"Legal issue\";\n            const { startOffset: rmStart, endOffset: rmEnd } = findTextOffset(content, rmText);\n            annotations.push({\n                id: `rechtlich_${i}`,\n                type: \"legal_risk\",\n                severity: rm.schweregrad?.toLowerCase() || \"high\",\n                comment: rm.kategorie || rm.beschreibung || rm.titel || \"Legal issue\",\n                explanation: rm.beschreibung || rm.erläuterung || rm.details || \"\",\n                legalReference: rm.rechtsgrundlage || rm.gesetz || undefined,\n                text: rmText,\n                startOffset: rmStart,\n                endOffset: rmEnd,\n                pageNumber: 1,\n                confidence: 0.9\n            });\n        });\n    }\n    // Map fehlende_klauseln (previous structure)\n    if (analysis.fehlende_klauseln && Array.isArray(analysis.fehlende_klauseln)) {\n        analysis.fehlende_klauseln.forEach((fk, i)=>{\n            annotations.push({\n                id: `fehlende_${i}`,\n                type: \"missing_clause\",\n                severity: \"medium\",\n                comment: `Fehlende Klausel: ${fk.klausel || fk.bereich || fk.titel}`,\n                explanation: fk.beschreibung || fk.erläuterung || fk.grund || \"\",\n                legalReference: fk.rechtsgrundlage || fk.gesetz || undefined,\n                text: fk.klausel || fk.bereich || fk.titel || \"Missing clause\",\n                startOffset: 0,\n                endOffset: 0,\n                pageNumber: 1,\n                confidence: 0.8\n            });\n        });\n    }\n    // Map kritische_punkte (original structure)\n    if (analysis.kritische_punkte && Array.isArray(analysis.kritische_punkte)) {\n        analysis.kritische_punkte.forEach((kp, i)=>{\n            annotations.push({\n                id: `kritisch_${i}`,\n                type: \"legal_risk\",\n                severity: \"high\",\n                comment: kp.kategorie || kp.beschreibung || \"Critical legal issue\",\n                explanation: kp.beschreibung || (kp.details ? kp.details.join(\". \") : \"\") || (kp.indizien ? kp.indizien.join(\". \") : \"\") || (kp.folgen ? kp.folgen.join(\". \") : \"\"),\n                legalReference: kp.rechtsgrundlagen ? kp.rechtsgrundlagen.join(\", \") : undefined,\n                text: kp.kategorie || kp.beschreibung || \"Critical issue\",\n                startOffset: i * 100,\n                endOffset: i * 100 + 50,\n                pageNumber: 1,\n                confidence: 0.9\n            });\n        });\n    }\n    // Map fehlende_pflichtangaben (original structure)\n    if (analysis.fehlende_pflichtangaben && Array.isArray(analysis.fehlende_pflichtangaben)) {\n        analysis.fehlende_pflichtangaben.forEach((fp, i)=>{\n            annotations.push({\n                id: `fehlend_${i}`,\n                type: \"missing_clause\",\n                severity: \"medium\",\n                comment: `Fehlende Regelung: ${fp.bereich}`,\n                explanation: `${fp.gesetzliche_anforderung}. Status: ${fp.status}`,\n                legalReference: fp.gesetzliche_anforderung,\n                text: fp.bereich,\n                startOffset: 0,\n                endOffset: 0,\n                pageNumber: 1,\n                confidence: 0.8\n            });\n        });\n    }\n    // Map weitere_mängel (if present)\n    if (analysis.weitere_mängel && Array.isArray(analysis.weitere_mängel)) {\n        analysis.weitere_mängel.forEach((wm, i)=>{\n            const wmText = wm.problem;\n            const { startOffset: wmStart, endOffset: wmEnd } = findTextOffset(content, wmText);\n            annotations.push({\n                id: `mangel_${i}`,\n                type: \"improvement_suggestion\",\n                severity: wm.bewertung?.toLowerCase().includes(\"hoch\") ? \"high\" : wm.bewertung?.toLowerCase().includes(\"mittel\") ? \"medium\" : \"low\",\n                comment: wm.problem,\n                explanation: wm.beschreibung,\n                legalReference: wm.rechtsgrundlage,\n                text: wmText,\n                startOffset: wmStart,\n                endOffset: wmEnd,\n                pageNumber: 1,\n                confidence: 0.8\n            });\n        });\n    }\n    // Map analyse_ergebnis.kritische_punkte (alternative structure)\n    if (analysis.analyse_ergebnis?.kritische_punkte) {\n        analysis.analyse_ergebnis.kritische_punkte.forEach((kp, i)=>{\n            const kpText = kp.problem;\n            const { startOffset: kpStart, endOffset: kpEnd } = findTextOffset(content, kpText);\n            annotations.push({\n                id: `werk_kritisch_${i}`,\n                type: \"legal_risk\",\n                severity: kp.bewertung?.toLowerCase().includes(\"hoch\") ? \"high\" : kp.bewertung?.toLowerCase().includes(\"mittel\") ? \"medium\" : \"low\",\n                comment: kp.problem,\n                explanation: kp.beschreibung,\n                suggestedReplacement: kp.empfehlung,\n                legalReference: kp.rechtsgrundlage,\n                text: kpText,\n                startOffset: kpStart,\n                endOffset: kpEnd,\n                pageNumber: 1,\n                confidence: 0.9\n            });\n        });\n    }\n    return annotations;\n}\n// Helper function to classify contract using the classification API\nasync function classifyContract(content) {\n    try {\n        const response = await fetch(`${process.env.NEXTAUTH_URL || \"http://localhost:3000\"}/api/classify-contract`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                content\n            })\n        });\n        if (!response.ok) {\n            throw new Error(`Classification API returned ${response.status}`);\n        }\n        const { classification } = await response.json();\n        return classification;\n    } catch (error) {\n        console.error(\"Failed to classify contract via API:\", error);\n        // Fallback to 'general' if classification fails\n        return {\n            primaryType: \"general\",\n            confidence: 0.5,\n            secondaryTypes: [],\n            reasoning: \"Classification API failed - using fallback\",\n            structuralIndicators: {\n                hasDeliverables: false,\n                hasTimeBasedPayment: false,\n                hasSuccessMetrics: false,\n                hasEmploymentTerms: false,\n                hasConfidentialityTerms: false,\n                clauseCount: 0,\n                contractLength: \"medium\"\n            },\n            isCompoundContract: false,\n            riskFactors: [\n                \"Classification failed - manual review recommended\"\n            ]\n        };\n    }\n}\nasync function POST(request) {\n    try {\n        const { content, pages, name } = await request.json();\n        if (!content || !pages || !name) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Missing contract data\"\n            }, {\n                status: 400\n            });\n        }\n        if (!process.env.GROQ_API_KEY) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"AI analysis service not configured\"\n            }, {\n                status: 500\n            });\n        }\n        // Step 1: Classify the contract using the sophisticated classification API\n        const classification = await classifyContract(content);\n        // Step 2: Use specialized system prompt based on classification\n        const systemPrompt = getSpecializedSystemPrompt(classification.primaryType);\n        // Build focused user prompt with classification context\n        const userPrompt = `Analysieren Sie den folgenden deutschen Vertrag:\n\nVERTRAGSNAME: ${name}\nKLASSIFIZIERT ALS: ${classification.primaryType} (Konfidenz: ${classification.confidence})\nKLASSIFIKATIONS-BEGRÜNDUNG: ${classification.reasoning}\n\nSTRUKTURELLE INDIKATOREN:\n- Liefergegenstände: ${classification.structuralIndicators.hasDeliverables}\n- Zeitbasierte Zahlung: ${classification.structuralIndicators.hasTimeBasedPayment}\n- Erfolgsmetriken: ${classification.structuralIndicators.hasSuccessMetrics}\n- Arbeitsrechtliche Begriffe: ${classification.structuralIndicators.hasEmploymentTerms}\n- Geheimhaltung: ${classification.structuralIndicators.hasConfidentialityTerms}\n- Klauseln: ${classification.structuralIndicators.clauseCount}\n- Länge: ${classification.structuralIndicators.contractLength}\n\n${classification.riskFactors.length > 0 ? `RISIKOFAKTOREN: ${classification.riskFactors.join(\", \")}` : \"\"}\n\nVERTRAGSINHALT:\n${content}\n\nFühren Sie eine vollständige rechtliche Analyse durch. Berücksichtigen Sie die Klassifikation und strukturellen Indikatoren. Identifizieren Sie ALLE problematischen Klauseln, fehlenden Bestimmungen und Compliance-Verstöße. Antworten Sie im geforderten JSON-Format.`;\n        // Call GroqCloud with specialized prompt\n        const completion = await groq.chat.completions.create({\n            messages: [\n                {\n                    role: \"system\",\n                    content: systemPrompt\n                },\n                {\n                    role: \"user\",\n                    content: userPrompt\n                }\n            ],\n            model: \"moonshotai/kimi-k2-instruct\",\n            temperature: 0.1,\n            max_tokens: 4000\n        });\n        const response = completion.choices[0]?.message?.content;\n        if (!response) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"No response from AI analysis\"\n            }, {\n                status: 502\n            });\n        }\n        // Parse the structured JSON response\n        let analysis;\n        try {\n            let clean = response.trim();\n            if (clean.startsWith(\"```json\")) clean = clean.replace(/```json\\n?/, \"\").replace(/\\n?```$/, \"\");\n            analysis = JSON.parse(clean);\n        } catch (e) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Invalid AI response format\",\n                raw: response\n            }, {\n                status: 502\n            });\n        }\n        // The structured prompt should provide annotations directly\n        // But keep normalization as fallback for edge cases\n        if (!analysis.annotations || analysis.annotations.length === 0) {\n            analysis.annotations = normalizeAnnotations(analysis, content);\n        }\n        // Post-process annotations to ensure they have valid offsets\n        analysis.annotations = computeAnnotationOffsets(analysis.annotations, content);\n        // Ensure basic fields are present\n        if (!analysis.overallRisk) {\n            analysis.overallRisk = analysis.annotations.length > 5 ? \"high\" : analysis.annotations.length > 2 ? \"medium\" : \"low\";\n        }\n        if (!analysis.summary) {\n            analysis.summary = `${analysis.annotations.length} rechtliche Probleme identifiziert.`;\n        }\n        // Include classification result in the response\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            analysis,\n            classification\n        });\n    } catch (error) {\n        console.error(\"Contract analysis error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to analyze contract\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Optional: Health check endpoint\nasync function GET() {\n    try {\n        const hasApiKey = !!process.env.GROQ_API_KEY;\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            status: \"operational\",\n            configured: hasApiKey,\n            timestamp: new Date().toISOString(),\n            version: \"1.0.0\"\n        });\n    } catch (error) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            status: \"error\",\n            message: \"Service health check failed\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/analyze-contract/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/specialized-prompts.ts":
/*!****************************************!*\
  !*** ./src/lib/specialized-prompts.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CLASSIFICATION_SYSTEM_PROMPT: () => (/* binding */ CLASSIFICATION_SYSTEM_PROMPT),\n/* harmony export */   SPECIALIZED_SYSTEM_PROMPTS: () => (/* binding */ SPECIALIZED_SYSTEM_PROMPTS)\n/* harmony export */ });\n// Optimized system prompt specifically for contract classification\nconst CLASSIFICATION_SYSTEM_PROMPT = `Sie sind ein deutscher Rechtsexperte für Vertragsklassifikation mit 20+ Jahren Erfahrung.\n\nIHRE AUFGABE: Klassifizieren Sie deutsche Verträge präzise in eine der folgenden Kategorien:\n\nKATEGORIEN:\n- arbeitsvertrag: Arbeitsverträge, Anstellungsverträge, Beschäftigungsverhältnisse\n- werkvertrag: Werkverträge nach § 631 BGB, erfolgsgeschuldete Leistungen, projektbasierte Arbeit  \n- dienstvertrag: Dienstverträge nach § 611 BGB, tätigkeitsgeschuldete Beratung/Services\n- nda: Geheimhaltungsvereinbarungen, Verschwiegenheitserklärungen\n- service_agreement: Komplexe IT-Services, SLA-basierte Agreements, Wartungsverträge\n- purchase_agreement: Kaufverträge, Lieferverträge, Sales Agreements\n- rental_agreement: Mietverträge, Pachtverträge, Leasing-Agreements  \n- general: Sonstige Verträge\n\nENTSCHEIDUNGSKRITERIEN:\n\nARBEITSVERTRAG:\n- Weisungsabhängigkeit, persönliche Arbeitsleistung\n- Sozialversicherungspflicht, Eingliederung in Betrieb\n- Begriffe: \"Arbeitnehmer\", \"Arbeitgeber\", \"Kündigung\", \"Urlaub\", \"Probezeit\"\n\nWERKVERTRAG (§ 631 BGB):\n- Erfolgsgeschuldet, spezifisches Werk/Ergebnis\n- Abnahme, Fertigstellung, Gewährleistung\n- Begriffe: \"Werk\", \"Abnahme\", \"Fertigstellung\", \"Mängel\"\n\nDIENSTVERTRAG (§ 611 BGB):\n- Tätigkeitsgeschuldet, zeitbasierte Vergütung\n- Beratung, Service ohne spezifisches Endergebnis\n- Begriffe: \"Dienstleistung\", \"Beratung\", \"pro Stunde\"\n\nAntworten Sie NUR im JSON-Format:\n{\n  \"primaryType\": \"kategorie\",\n  \"confidence\": 0.95,\n  \"reasoning\": \"Kurze präzise Begründung\"\n}`;\n// Common deduplication instructions for all analysis prompts\nconst DEDUPLICATION_INSTRUCTIONS = `\n\nWICHTIGE HINWEISE ZUR VERMEIDUNG VON DUPLIKATEN:\n- Fassen Sie ähnliche Probleme zu EINER umfassenden Annotation zusammen\n- Erwähnen Sie jedes rechtliche Problem nur EINMAL\n- Kombinieren Sie verwandte Risiken in einer Annotation\n- Vermeiden Sie Wiederholungen zwischen \"annotations\" und \"recommendations\"\n- Priorisieren Sie die schwerwiegendsten Aspekte eines Problems`;\nconst SPECIALIZED_SYSTEM_PROMPTS = {\n    arbeitsvertrag: `Sie sind ein Arbeitsrechts-Experte. Analysieren Sie diesen ARBEITSVERTRAG auf rechtliche Risiken und Compliance.\n\nKRITISCHE PRÜFBEREICHE:\n\n1. KÜNDIGUNGSSCHUTZ (§§ 622 BGB, KSchG):\n   - Kündigungsfristen mind. 4 Wochen zum 15./Monatsende\n   - Probezeit max. 6 Monate\n   - Unwirksame Kündigungsklauseln\n\n2. VERGÜTUNG & ARBEITSZEIT (ArbZG, MiLoG):\n   - Mindestlohn €12,41/Stunde (bei 40h/Woche = 173,3h/Monat)\n   - Höchstarbeitszeit 8h/Tag, 48h/Woche\n   - Überstundenregelungen\n\n3. URLAUB (BUrlG):\n   - Mindestens 20 Werktage (bei 5-Tage-Woche)\n   - Mindestens 24 Werktage (bei 6-Tage-Woche)\n\n4. COMPLIANCE:\n   - AGG-Diskriminierungsschutz\n   - DSGVO-Datenschutz\n   - Scheinselbstständigkeit vermeiden\n\nFOKUS: Identifizieren Sie Verstöße gegen zwingendes Arbeitsrecht und unwirksame AGB-Klauseln.${DEDUPLICATION_INSTRUCTIONS}`,\n    werkvertrag: `Sie sind ein Werkvertragsrechts-Experte. Analysieren Sie diesen WERKVERTRAG auf rechtliche Risiken.\n\nKRITISCHE PRÜFBEREICHE:\n\n1. WERKDEFINITION (§ 631 BGB):\n   - Eindeutige Beschreibung des Werkerfolgs\n   - Messbare Abnahmekriterien\n   - Erfolgsschuld vs. Tätigkeitsschuld\n\n2. VERGÜTUNG & ABNAHME (§§ 632, 640 BGB):\n   - Vergütung nach Abnahme/Fertigstellung\n   - Abnahmeverfahren und -fristen\n   - Gefahrübergang\n\n3. GEWÄHRLEISTUNG (§§ 634-639 BGB):\n   - Nacherfüllung, Selbstvornahme\n   - Verjährungsfristen (2-5 Jahre)\n   - Haftungsausschlüsse\n\n4. SCHEINSELBSTSTÄNDIGKEIT:\n   - Weisungsfreiheit des Werkunternehmers\n   - Eigene Betriebsmittel\n   - Unternehmerrisiko\n\nFOKUS: Abgrenzung zu Arbeits-/Dienstverträgen und Gewährleistungsrisiken.${DEDUPLICATION_INSTRUCTIONS}`,\n    dienstvertrag: `Sie sind ein erfahrener deutscher Jurist mit Schwerpunkt auf DIENSTVERTRÄGEN nach § 611 BGB. Analysieren Sie diesen Vertrag auf rechtliche Risiken, insbesondere in Hinblick auf Scheinselbstständigkeit, Leistungsbeschreibung, DSGVO und Haftung.\n\nKRITISCHE PRÜFBEREICHE:\n\n1. LEISTUNGSDEFINITION (§ 611 BGB):\n   - Tätigkeitsbeschreibung ausreichend konkret?\n   - Keine Abnahmepflicht oder erfolgsgeschuldete Leistung (Abgrenzung zum Werkvertrag)\n   - Klarheit über Umfang, Qualität, Regelmäßigkeit der Tätigkeit\n\n2. VERGÜTUNG & NEBENKOSTEN (§§ 612, 670 BGB):\n   - Zeit-/leistungsbezogene Vergütung korrekt angegeben?\n   - Regelung zur Abrechnung von Reisekosten, Software, Materialien?\n   - Umsatzsteuerregelung bei Vergütungsänderungen\n\n3. DATENSCHUTZ:\n   - Verarbeitung personenbezogener Daten explizit geregelt?\n   - ADV-Vertrag gemäß Art. 28 DSGVO vorhanden oder vereinbart?\n\n4. SELBSTSTÄNDIGKEIT & § 7 SGB IV:\n   - Klare Indikatoren für Selbstständigkeit: freie Zeiteinteilung, eigene Betriebsmittel, Vertretungsrecht\n   - Kein Ausschluss weiterer Mandate\n   - Kein faktisches Direktionsrecht (z. B. durch Berichtspflichten + Ortspflicht)\n\n5. HAFTUNG (§§ 276, 280 BGB):\n   - Keine unzulässige Haftungsfreistellung bei Kardinalpflichten (§ 307 BGB)?\n   - Klare Formulierung der Haftung für Hilfspersonen (§ 278 BGB)?\n\n6. KÜNDIGUNG & DOKUMENTATION (§§ 627, 666 BGB):\n   - Kündigungsrecht jederzeit möglich?\n   - Dokumentations-/Auskunftspflichten ausdrücklich geregelt?\n\nFOKUS: Vermeiden Sie Scheinselbstständigkeit, DSGVO-Verstöße und unangemessene Haftungsklauseln. Kennzeichnen Sie echte rechtliche Risiken vs. bloße Verbesserungsvorschläge klar.\n\n${DEDUPLICATION_INSTRUCTIONS}`,\n    nda: `Sie sind ein Experte für Geheimhaltungsrecht. Analysieren Sie diese GEHEIMHALTUNGSVEREINBARUNG.\n\nKRITISCHE PRÜFBEREICHE:\n\n1. DEFINITION VERTRAULICHER INFORMATIONEN:\n   - Präzise Abgrenzung\n   - Ausnahmen (already-known, öffentlich)\n   - Kennzeichnung vertraulicher Daten\n\n2. GEHEIMHALTUNGSPFLICHT:\n   - Umfang und Dauer (angemessen 3-5 Jahre)\n   - Weitergabe an Mitarbeiter/Berater\n   - Schutzmaßnahmen\n\n3. RÜCKGABE & VERNICHTUNG:\n   - Vollständige Rückgabe\n   - Sichere Löschung digitaler Daten\n   - Vernichtungsbestätigung\n\n4. VERTRAGSSTRAFEN (§ 343 BGB):\n   - Angemessene Höhe\n   - Schadensersatz zusätzlich möglich\n   - Durchsetzbarkeit\n\nFOKUS: DSGVO-Konformität und Verhältnismäßigkeit der Geheimhaltung.${DEDUPLICATION_INSTRUCTIONS}`,\n    service_agreement: `Sie sind ein IT-/Service-Vertragsexperte. Analysieren Sie diesen SERVICE AGREEMENT.\n\nKRITISCHE PRÜFBEREICHE:\n\n1. SERVICE LEVEL AGREEMENTS (SLA):\n   - Verfügbarkeitsgarantien\n   - Response-/Resolution-Zeiten\n   - Penalty-Klauseln bei SLA-Verletzung\n\n2. LEISTUNGSBESCHREIBUNG:\n   - Eindeutige Service-Definition\n   - Abgrenzung Basis-/Premium-Services\n   - Change-Management-Prozesse\n\n3. HAFTUNG & GEWÄHRLEISTUNG:\n   - Haftungsbeschränkungen\n   - Datenverlust-Haftung\n   - Ausfallzeiten-Entschädigung\n\n4. DATENSCHUTZ & SICHERHEIT:\n   - DSGVO-Compliance\n   - Auftragsverarbeitung Art. 28 DSGVO\n   - IT-Sicherheitsstandards\n\nFOKUS: SLA-Durchsetzbarkeit und Datenschutz-Compliance.${DEDUPLICATION_INSTRUCTIONS}`,\n    purchase_agreement: `Sie sind ein Kaufvertragsrechts-Experte. Analysieren Sie diesen KAUFVERTRAG.\n\nKRITISCHE PRÜFBEREICHE:\n\n1. KAUFGEGENSTAND (§ 433 BGB):\n   - Eindeutige Beschreibung\n   - Qualitäts-/Beschaffenheitsvereinbarungen\n   - Menge und Spezifikationen\n\n2. LIEFERUNG & GEFAHRÜBERGANG (§§ 446-447 BGB):\n   - Lieferort und -zeit\n   - Gefahrübergang beim Versendungskauf\n   - Incoterms bei internationalen Verträgen\n\n3. GEWÄHRLEISTUNG (§§ 434-445 BGB):\n   - Sach- und Rechtsmängel\n   - Nacherfüllung als vorrangiges Recht\n   - Verjährungsfristen (2 Jahre bewegliche Sachen)\n\n4. EIGENTUMSVORBEHALT (§ 449 BGB):\n   - Einfacher/erweiterter Eigentumsvorbehalt\n   - Sicherungsübereignung\n   - Herausgabeansprüche\n\nFOKUS: Gewährleistungsausschlüsse und Eigentumsübergang.${DEDUPLICATION_INSTRUCTIONS}`,\n    rental_agreement: `Sie sind ein Mietrechts-Experte. Analysieren Sie diesen MIETVERTRAG.\n\nKRITISCHE PRÜFBEREICHE:\n\n1. MIETSACHE & NUTZUNG (§ 535 BGB):\n   - Genaue Beschreibung der Mietsache\n   - Nutzungsart (Wohnen/Gewerbe)\n   - Flächenangaben\n\n2. MIETE & NEBENKOSTEN:\n   - Grundmiete, Staffel-/Indexmiete\n   - Betriebskosten nach BetrKV\n   - Mietpreisbremse (bei Wohnraum)\n\n3. KAUTION (§ 551 BGB):\n   - Max. 3 Nettokaltmieten\n   - Anlage und Verzinsung\n   - Rückgabe bei Mietende\n\n4. KÜNDIGUNG:\n   - Kündigungsfristen § 573 BGB\n   - Eigenbedarfskündigung\n   - Sonderkündigungsrechte\n\nFOKUS: Unwirksame Klauseln im Wohnraummietrecht und AGB-Kontrolle.${DEDUPLICATION_INSTRUCTIONS}`,\n    general: `Sie sind ein Vertragsrechts-Experte. Analysieren Sie diesen VERTRAG auf allgemeine rechtliche Risiken.\n\nKRITISCHE PRÜFBEREICHE:\n\n1. VERTRAGSSCHLUSS (§§ 145-157 BGB):\n   - Angebot und Annahme\n   - Willensmängel\n   - Form- und Schriftformerfordernisse\n\n2. AGB-KONTROLLE (§§ 305-310 BGB):\n   - Einbeziehung von AGB\n   - Transparenzgebot § 307 Abs. 1 S. 2 BGB\n   - Klauselverbote §§ 308-309 BGB\n\n3. LEISTUNGSSTÖRUNGEN (§§ 280-326 BGB):\n   - Unmöglichkeit und Verzug\n   - Pflichtverletzung und Schadensersatz\n   - Rücktritt und Minderung\n\n4. ALLGEMEINE KLAUSELN:\n   - Haftungsausschlüsse/-beschränkungen\n   - Gerichtsstand und Rechtswahl\n   - Salvatorische Klauseln\n\nFOKUS: AGB-Unwirksamkeit und ausgewogene Vertragsgestaltung.${DEDUPLICATION_INSTRUCTIONS}`\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/specialized-prompts.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/formdata-node","vendor-chunks/tr46","vendor-chunks/web-streams-polyfill","vendor-chunks/groq-sdk","vendor-chunks/node-fetch","vendor-chunks/whatwg-url","vendor-chunks/event-target-shim","vendor-chunks/agentkeepalive","vendor-chunks/form-data-encoder","vendor-chunks/webidl-conversions","vendor-chunks/abort-controller","vendor-chunks/ms","vendor-chunks/humanize-ms"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze-contract%2Froute&page=%2Fapi%2Fanalyze-contract%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze-contract%2Froute.ts&appDir=%2FUsers%2Fmaxhenkes%2FDesktop%2FLexChecker%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmaxhenkes%2FDesktop%2FLexChecker&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();